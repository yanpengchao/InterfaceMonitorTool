// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "HostDistribution.pb.h"

@implementation HostDistributionRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [HostDistributionRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CommonRoot registerAllExtensions:registry];
    [PhoneNewsTypeRoot registerAllExtensions:registry];
    [PhoneOpinionTypeRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface HostDistribution ()
@property (retain) NSString* versionNeedUpdate;
@property (retain) NSString* updateUrl;
@property int64_t serverTime;
@property (retain) NSString* basicInfoNeedUpdate;
@property (retain) NSString* managerNeedUpdate;
@property (retain) NSString* companyNeedUpdate;
@property (retain) NSString* newsTypeNeedUpdate;
@property (retain) NSString* opinionTypeNeedUpdate;
@property (retain) Common* common;
@property (retain) NSMutableArray* mutablePhoneNewsTypeList;
@property (retain) NSMutableArray* mutablePhoneOpinionTypeList;
@property (retain) NSString* kfsNeedUpdate;
@property (retain) NSString* fbsNeedUpdate;
@property (retain) NSString* hbsNeedUpdate;
@property (retain) NSString* smNeedUpdate;
@property (retain) NSString* dtNeedUpdate;
@property (retain) NSString* updateDesc;
@end

@implementation HostDistribution

- (BOOL) hasVersionNeedUpdate {
  return !!hasVersionNeedUpdate_;
}
- (void) setHasVersionNeedUpdate:(BOOL) value {
  hasVersionNeedUpdate_ = !!value;
}
@synthesize versionNeedUpdate;
- (BOOL) hasUpdateUrl {
  return !!hasUpdateUrl_;
}
- (void) setHasUpdateUrl:(BOOL) value {
  hasUpdateUrl_ = !!value;
}
@synthesize updateUrl;
- (BOOL) hasServerTime {
  return !!hasServerTime_;
}
- (void) setHasServerTime:(BOOL) value {
  hasServerTime_ = !!value;
}
@synthesize serverTime;
- (BOOL) hasBasicInfoNeedUpdate {
  return !!hasBasicInfoNeedUpdate_;
}
- (void) setHasBasicInfoNeedUpdate:(BOOL) value {
  hasBasicInfoNeedUpdate_ = !!value;
}
@synthesize basicInfoNeedUpdate;
- (BOOL) hasManagerNeedUpdate {
  return !!hasManagerNeedUpdate_;
}
- (void) setHasManagerNeedUpdate:(BOOL) value {
  hasManagerNeedUpdate_ = !!value;
}
@synthesize managerNeedUpdate;
- (BOOL) hasCompanyNeedUpdate {
  return !!hasCompanyNeedUpdate_;
}
- (void) setHasCompanyNeedUpdate:(BOOL) value {
  hasCompanyNeedUpdate_ = !!value;
}
@synthesize companyNeedUpdate;
- (BOOL) hasNewsTypeNeedUpdate {
  return !!hasNewsTypeNeedUpdate_;
}
- (void) setHasNewsTypeNeedUpdate:(BOOL) value {
  hasNewsTypeNeedUpdate_ = !!value;
}
@synthesize newsTypeNeedUpdate;
- (BOOL) hasOpinionTypeNeedUpdate {
  return !!hasOpinionTypeNeedUpdate_;
}
- (void) setHasOpinionTypeNeedUpdate:(BOOL) value {
  hasOpinionTypeNeedUpdate_ = !!value;
}
@synthesize opinionTypeNeedUpdate;
- (BOOL) hasCommon {
  return !!hasCommon_;
}
- (void) setHasCommon:(BOOL) value {
  hasCommon_ = !!value;
}
@synthesize common;
@synthesize mutablePhoneNewsTypeList;
@synthesize mutablePhoneOpinionTypeList;
- (BOOL) hasKfsNeedUpdate {
  return !!hasKfsNeedUpdate_;
}
- (void) setHasKfsNeedUpdate:(BOOL) value {
  hasKfsNeedUpdate_ = !!value;
}
@synthesize kfsNeedUpdate;
- (BOOL) hasFbsNeedUpdate {
  return !!hasFbsNeedUpdate_;
}
- (void) setHasFbsNeedUpdate:(BOOL) value {
  hasFbsNeedUpdate_ = !!value;
}
@synthesize fbsNeedUpdate;
- (BOOL) hasHbsNeedUpdate {
  return !!hasHbsNeedUpdate_;
}
- (void) setHasHbsNeedUpdate:(BOOL) value {
  hasHbsNeedUpdate_ = !!value;
}
@synthesize hbsNeedUpdate;
- (BOOL) hasSmNeedUpdate {
  return !!hasSmNeedUpdate_;
}
- (void) setHasSmNeedUpdate:(BOOL) value {
  hasSmNeedUpdate_ = !!value;
}
@synthesize smNeedUpdate;
- (BOOL) hasDtNeedUpdate {
  return !!hasDtNeedUpdate_;
}
- (void) setHasDtNeedUpdate:(BOOL) value {
  hasDtNeedUpdate_ = !!value;
}
@synthesize dtNeedUpdate;
- (BOOL) hasUpdateDesc {
  return !!hasUpdateDesc_;
}
- (void) setHasUpdateDesc:(BOOL) value {
  hasUpdateDesc_ = !!value;
}
@synthesize updateDesc;
- (void) dealloc {
  self.versionNeedUpdate = nil;
  self.updateUrl = nil;
  self.basicInfoNeedUpdate = nil;
  self.managerNeedUpdate = nil;
  self.companyNeedUpdate = nil;
  self.newsTypeNeedUpdate = nil;
  self.opinionTypeNeedUpdate = nil;
  self.common = nil;
  self.mutablePhoneNewsTypeList = nil;
  self.mutablePhoneOpinionTypeList = nil;
  self.kfsNeedUpdate = nil;
  self.fbsNeedUpdate = nil;
  self.hbsNeedUpdate = nil;
  self.smNeedUpdate = nil;
  self.dtNeedUpdate = nil;
  self.updateDesc = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.versionNeedUpdate = @"";
    self.updateUrl = @"";
    self.serverTime = 0L;
    self.basicInfoNeedUpdate = @"";
    self.managerNeedUpdate = @"";
    self.companyNeedUpdate = @"";
    self.newsTypeNeedUpdate = @"";
    self.opinionTypeNeedUpdate = @"";
    self.common = [Common defaultInstance];
    self.kfsNeedUpdate = @"";
    self.fbsNeedUpdate = @"";
    self.hbsNeedUpdate = @"";
    self.smNeedUpdate = @"";
    self.dtNeedUpdate = @"";
    self.updateDesc = @"";
  }
  return self;
}
static HostDistribution* defaultHostDistributionInstance = nil;
+ (void) initialize {
  if (self == [HostDistribution class]) {
    defaultHostDistributionInstance = [[HostDistribution alloc] init];
  }
}
+ (HostDistribution*) defaultInstance {
  return defaultHostDistributionInstance;
}
- (HostDistribution*) defaultInstance {
  return defaultHostDistributionInstance;
}
- (NSArray*) phoneNewsTypeList {
  return mutablePhoneNewsTypeList;
}
- (PhoneNewsType*) phoneNewsTypeAtIndex:(int32_t) index {
  id value = [mutablePhoneNewsTypeList objectAtIndex:index];
  return value;
}
- (NSArray*) phoneOpinionTypeList {
  return mutablePhoneOpinionTypeList;
}
- (PhoneOpinionType*) phoneOpinionTypeAtIndex:(int32_t) index {
  id value = [mutablePhoneOpinionTypeList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasVersionNeedUpdate) {
    [output writeString:4 value:self.versionNeedUpdate];
  }
  if (self.hasUpdateUrl) {
    [output writeString:5 value:self.updateUrl];
  }
  if (self.hasServerTime) {
    [output writeFixed64:6 value:self.serverTime];
  }
  if (self.hasBasicInfoNeedUpdate) {
    [output writeString:8 value:self.basicInfoNeedUpdate];
  }
  if (self.hasManagerNeedUpdate) {
    [output writeString:9 value:self.managerNeedUpdate];
  }
  if (self.hasCompanyNeedUpdate) {
    [output writeString:10 value:self.companyNeedUpdate];
  }
  if (self.hasNewsTypeNeedUpdate) {
    [output writeString:11 value:self.newsTypeNeedUpdate];
  }
  if (self.hasOpinionTypeNeedUpdate) {
    [output writeString:12 value:self.opinionTypeNeedUpdate];
  }
  if (self.hasCommon) {
    [output writeMessage:13 value:self.common];
  }
  for (PhoneNewsType* element in self.phoneNewsTypeList) {
    [output writeMessage:14 value:element];
  }
  for (PhoneOpinionType* element in self.phoneOpinionTypeList) {
    [output writeMessage:15 value:element];
  }
  if (self.hasKfsNeedUpdate) {
    [output writeString:16 value:self.kfsNeedUpdate];
  }
  if (self.hasFbsNeedUpdate) {
    [output writeString:17 value:self.fbsNeedUpdate];
  }
  if (self.hasHbsNeedUpdate) {
    [output writeString:18 value:self.hbsNeedUpdate];
  }
  if (self.hasSmNeedUpdate) {
    [output writeString:19 value:self.smNeedUpdate];
  }
  if (self.hasDtNeedUpdate) {
    [output writeString:20 value:self.dtNeedUpdate];
  }
  if (self.hasUpdateDesc) {
    [output writeString:21 value:self.updateDesc];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasVersionNeedUpdate) {
    size += computeStringSize(4, self.versionNeedUpdate);
  }
  if (self.hasUpdateUrl) {
    size += computeStringSize(5, self.updateUrl);
  }
  if (self.hasServerTime) {
    size += computeFixed64Size(6, self.serverTime);
  }
  if (self.hasBasicInfoNeedUpdate) {
    size += computeStringSize(8, self.basicInfoNeedUpdate);
  }
  if (self.hasManagerNeedUpdate) {
    size += computeStringSize(9, self.managerNeedUpdate);
  }
  if (self.hasCompanyNeedUpdate) {
    size += computeStringSize(10, self.companyNeedUpdate);
  }
  if (self.hasNewsTypeNeedUpdate) {
    size += computeStringSize(11, self.newsTypeNeedUpdate);
  }
  if (self.hasOpinionTypeNeedUpdate) {
    size += computeStringSize(12, self.opinionTypeNeedUpdate);
  }
  if (self.hasCommon) {
    size += computeMessageSize(13, self.common);
  }
  for (PhoneNewsType* element in self.phoneNewsTypeList) {
    size += computeMessageSize(14, element);
  }
  for (PhoneOpinionType* element in self.phoneOpinionTypeList) {
    size += computeMessageSize(15, element);
  }
  if (self.hasKfsNeedUpdate) {
    size += computeStringSize(16, self.kfsNeedUpdate);
  }
  if (self.hasFbsNeedUpdate) {
    size += computeStringSize(17, self.fbsNeedUpdate);
  }
  if (self.hasHbsNeedUpdate) {
    size += computeStringSize(18, self.hbsNeedUpdate);
  }
  if (self.hasSmNeedUpdate) {
    size += computeStringSize(19, self.smNeedUpdate);
  }
  if (self.hasDtNeedUpdate) {
    size += computeStringSize(20, self.dtNeedUpdate);
  }
  if (self.hasUpdateDesc) {
    size += computeStringSize(21, self.updateDesc);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (HostDistribution*) parseFromData:(NSData*) data {
  return (HostDistribution*)[[[HostDistribution builder] mergeFromData:data] build];
}
+ (HostDistribution*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HostDistribution*)[[[HostDistribution builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HostDistribution*) parseFromInputStream:(NSInputStream*) input {
  return (HostDistribution*)[[[HostDistribution builder] mergeFromInputStream:input] build];
}
+ (HostDistribution*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HostDistribution*)[[[HostDistribution builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HostDistribution*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HostDistribution*)[[[HostDistribution builder] mergeFromCodedInputStream:input] build];
}
+ (HostDistribution*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HostDistribution*)[[[HostDistribution builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HostDistribution_Builder*) builder {
  return [[[HostDistribution_Builder alloc] init] autorelease];
}
+ (HostDistribution_Builder*) builderWithPrototype:(HostDistribution*) prototype {
  return [[HostDistribution builder] mergeFrom:prototype];
}
- (HostDistribution_Builder*) builder {
  return [HostDistribution builder];
}
@end

@interface HostDistribution_Builder()
@property (retain) HostDistribution* result;
@end

@implementation HostDistribution_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[HostDistribution alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (HostDistribution_Builder*) clear {
  self.result = [[[HostDistribution alloc] init] autorelease];
  return self;
}
- (HostDistribution_Builder*) clone {
  return [HostDistribution builderWithPrototype:result];
}
- (HostDistribution*) defaultInstance {
  return [HostDistribution defaultInstance];
}
- (HostDistribution*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HostDistribution*) buildPartial {
  HostDistribution* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (HostDistribution_Builder*) mergeFrom:(HostDistribution*) other {
  if (other == [HostDistribution defaultInstance]) {
    return self;
  }
  if (other.hasVersionNeedUpdate) {
    [self setVersionNeedUpdate:other.versionNeedUpdate];
  }
  if (other.hasUpdateUrl) {
    [self setUpdateUrl:other.updateUrl];
  }
  if (other.hasServerTime) {
    [self setServerTime:other.serverTime];
  }
  if (other.hasBasicInfoNeedUpdate) {
    [self setBasicInfoNeedUpdate:other.basicInfoNeedUpdate];
  }
  if (other.hasManagerNeedUpdate) {
    [self setManagerNeedUpdate:other.managerNeedUpdate];
  }
  if (other.hasCompanyNeedUpdate) {
    [self setCompanyNeedUpdate:other.companyNeedUpdate];
  }
  if (other.hasNewsTypeNeedUpdate) {
    [self setNewsTypeNeedUpdate:other.newsTypeNeedUpdate];
  }
  if (other.hasOpinionTypeNeedUpdate) {
    [self setOpinionTypeNeedUpdate:other.opinionTypeNeedUpdate];
  }
  if (other.hasCommon) {
    [self mergeCommon:other.common];
  }
  if (other.mutablePhoneNewsTypeList.count > 0) {
    if (result.mutablePhoneNewsTypeList == nil) {
      result.mutablePhoneNewsTypeList = [NSMutableArray array];
    }
    [result.mutablePhoneNewsTypeList addObjectsFromArray:other.mutablePhoneNewsTypeList];
  }
  if (other.mutablePhoneOpinionTypeList.count > 0) {
    if (result.mutablePhoneOpinionTypeList == nil) {
      result.mutablePhoneOpinionTypeList = [NSMutableArray array];
    }
    [result.mutablePhoneOpinionTypeList addObjectsFromArray:other.mutablePhoneOpinionTypeList];
  }
  if (other.hasKfsNeedUpdate) {
    [self setKfsNeedUpdate:other.kfsNeedUpdate];
  }
  if (other.hasFbsNeedUpdate) {
    [self setFbsNeedUpdate:other.fbsNeedUpdate];
  }
  if (other.hasHbsNeedUpdate) {
    [self setHbsNeedUpdate:other.hbsNeedUpdate];
  }
  if (other.hasSmNeedUpdate) {
    [self setSmNeedUpdate:other.smNeedUpdate];
  }
  if (other.hasDtNeedUpdate) {
    [self setDtNeedUpdate:other.dtNeedUpdate];
  }
  if (other.hasUpdateDesc) {
    [self setUpdateDesc:other.updateDesc];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HostDistribution_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HostDistribution_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 34: {
        [self setVersionNeedUpdate:[input readString]];
        break;
      }
      case 42: {
        [self setUpdateUrl:[input readString]];
        break;
      }
      case 49: {
        [self setServerTime:[input readFixed64]];
        break;
      }
      case 66: {
        [self setBasicInfoNeedUpdate:[input readString]];
        break;
      }
      case 74: {
        [self setManagerNeedUpdate:[input readString]];
        break;
      }
      case 82: {
        [self setCompanyNeedUpdate:[input readString]];
        break;
      }
      case 90: {
        [self setNewsTypeNeedUpdate:[input readString]];
        break;
      }
      case 98: {
        [self setOpinionTypeNeedUpdate:[input readString]];
        break;
      }
      case 106: {
        Common_Builder* subBuilder = [Common builder];
        if (self.hasCommon) {
          [subBuilder mergeFrom:self.common];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCommon:[subBuilder buildPartial]];
        break;
      }
      case 114: {
        PhoneNewsType_Builder* subBuilder = [PhoneNewsType builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPhoneNewsType:[subBuilder buildPartial]];
        break;
      }
      case 122: {
        PhoneOpinionType_Builder* subBuilder = [PhoneOpinionType builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPhoneOpinionType:[subBuilder buildPartial]];
        break;
      }
      case 130: {
        [self setKfsNeedUpdate:[input readString]];
        break;
      }
      case 138: {
        [self setFbsNeedUpdate:[input readString]];
        break;
      }
      case 146: {
        [self setHbsNeedUpdate:[input readString]];
        break;
      }
      case 154: {
        [self setSmNeedUpdate:[input readString]];
        break;
      }
      case 162: {
        [self setDtNeedUpdate:[input readString]];
        break;
      }
      case 170: {
        [self setUpdateDesc:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasVersionNeedUpdate {
  return result.hasVersionNeedUpdate;
}
- (NSString*) versionNeedUpdate {
  return result.versionNeedUpdate;
}
- (HostDistribution_Builder*) setVersionNeedUpdate:(NSString*) value {
  result.hasVersionNeedUpdate = YES;
  result.versionNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearVersionNeedUpdate {
  result.hasVersionNeedUpdate = NO;
  result.versionNeedUpdate = @"";
  return self;
}
- (BOOL) hasUpdateUrl {
  return result.hasUpdateUrl;
}
- (NSString*) updateUrl {
  return result.updateUrl;
}
- (HostDistribution_Builder*) setUpdateUrl:(NSString*) value {
  result.hasUpdateUrl = YES;
  result.updateUrl = value;
  return self;
}
- (HostDistribution_Builder*) clearUpdateUrl {
  result.hasUpdateUrl = NO;
  result.updateUrl = @"";
  return self;
}
- (BOOL) hasServerTime {
  return result.hasServerTime;
}
- (int64_t) serverTime {
  return result.serverTime;
}
- (HostDistribution_Builder*) setServerTime:(int64_t) value {
  result.hasServerTime = YES;
  result.serverTime = value;
  return self;
}
- (HostDistribution_Builder*) clearServerTime {
  result.hasServerTime = NO;
  result.serverTime = 0L;
  return self;
}
- (BOOL) hasBasicInfoNeedUpdate {
  return result.hasBasicInfoNeedUpdate;
}
- (NSString*) basicInfoNeedUpdate {
  return result.basicInfoNeedUpdate;
}
- (HostDistribution_Builder*) setBasicInfoNeedUpdate:(NSString*) value {
  result.hasBasicInfoNeedUpdate = YES;
  result.basicInfoNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearBasicInfoNeedUpdate {
  result.hasBasicInfoNeedUpdate = NO;
  result.basicInfoNeedUpdate = @"";
  return self;
}
- (BOOL) hasManagerNeedUpdate {
  return result.hasManagerNeedUpdate;
}
- (NSString*) managerNeedUpdate {
  return result.managerNeedUpdate;
}
- (HostDistribution_Builder*) setManagerNeedUpdate:(NSString*) value {
  result.hasManagerNeedUpdate = YES;
  result.managerNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearManagerNeedUpdate {
  result.hasManagerNeedUpdate = NO;
  result.managerNeedUpdate = @"";
  return self;
}
- (BOOL) hasCompanyNeedUpdate {
  return result.hasCompanyNeedUpdate;
}
- (NSString*) companyNeedUpdate {
  return result.companyNeedUpdate;
}
- (HostDistribution_Builder*) setCompanyNeedUpdate:(NSString*) value {
  result.hasCompanyNeedUpdate = YES;
  result.companyNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearCompanyNeedUpdate {
  result.hasCompanyNeedUpdate = NO;
  result.companyNeedUpdate = @"";
  return self;
}
- (BOOL) hasNewsTypeNeedUpdate {
  return result.hasNewsTypeNeedUpdate;
}
- (NSString*) newsTypeNeedUpdate {
  return result.newsTypeNeedUpdate;
}
- (HostDistribution_Builder*) setNewsTypeNeedUpdate:(NSString*) value {
  result.hasNewsTypeNeedUpdate = YES;
  result.newsTypeNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearNewsTypeNeedUpdate {
  result.hasNewsTypeNeedUpdate = NO;
  result.newsTypeNeedUpdate = @"";
  return self;
}
- (BOOL) hasOpinionTypeNeedUpdate {
  return result.hasOpinionTypeNeedUpdate;
}
- (NSString*) opinionTypeNeedUpdate {
  return result.opinionTypeNeedUpdate;
}
- (HostDistribution_Builder*) setOpinionTypeNeedUpdate:(NSString*) value {
  result.hasOpinionTypeNeedUpdate = YES;
  result.opinionTypeNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearOpinionTypeNeedUpdate {
  result.hasOpinionTypeNeedUpdate = NO;
  result.opinionTypeNeedUpdate = @"";
  return self;
}
- (BOOL) hasCommon {
  return result.hasCommon;
}
- (Common*) common {
  return result.common;
}
- (HostDistribution_Builder*) setCommon:(Common*) value {
  result.hasCommon = YES;
  result.common = value;
  return self;
}
- (HostDistribution_Builder*) setCommonBuilder:(Common_Builder*) builderForValue {
  return [self setCommon:[builderForValue build]];
}
- (HostDistribution_Builder*) mergeCommon:(Common*) value {
  if (result.hasCommon &&
      result.common != [Common defaultInstance]) {
    result.common =
      [[[Common builderWithPrototype:result.common] mergeFrom:value] buildPartial];
  } else {
    result.common = value;
  }
  result.hasCommon = YES;
  return self;
}
- (HostDistribution_Builder*) clearCommon {
  result.hasCommon = NO;
  result.common = [Common defaultInstance];
  return self;
}
- (NSArray*) phoneNewsTypeList {
  if (result.mutablePhoneNewsTypeList == nil) { return [NSArray array]; }
  return result.mutablePhoneNewsTypeList;
}
- (PhoneNewsType*) phoneNewsTypeAtIndex:(int32_t) index {
  return [result phoneNewsTypeAtIndex:index];
}
- (HostDistribution_Builder*) replacePhoneNewsTypeAtIndex:(int32_t) index with:(PhoneNewsType*) value {
  [result.mutablePhoneNewsTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (HostDistribution_Builder*) addAllPhoneNewsType:(NSArray*) values {
  if (result.mutablePhoneNewsTypeList == nil) {
    result.mutablePhoneNewsTypeList = [NSMutableArray array];
  }
  [result.mutablePhoneNewsTypeList addObjectsFromArray:values];
  return self;
}
- (HostDistribution_Builder*) clearPhoneNewsTypeList {
  result.mutablePhoneNewsTypeList = nil;
  return self;
}
- (HostDistribution_Builder*) addPhoneNewsType:(PhoneNewsType*) value {
  if (result.mutablePhoneNewsTypeList == nil) {
    result.mutablePhoneNewsTypeList = [NSMutableArray array];
  }
  [result.mutablePhoneNewsTypeList addObject:value];
  return self;
}
- (NSArray*) phoneOpinionTypeList {
  if (result.mutablePhoneOpinionTypeList == nil) { return [NSArray array]; }
  return result.mutablePhoneOpinionTypeList;
}
- (PhoneOpinionType*) phoneOpinionTypeAtIndex:(int32_t) index {
  return [result phoneOpinionTypeAtIndex:index];
}
- (HostDistribution_Builder*) replacePhoneOpinionTypeAtIndex:(int32_t) index with:(PhoneOpinionType*) value {
  [result.mutablePhoneOpinionTypeList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (HostDistribution_Builder*) addAllPhoneOpinionType:(NSArray*) values {
  if (result.mutablePhoneOpinionTypeList == nil) {
    result.mutablePhoneOpinionTypeList = [NSMutableArray array];
  }
  [result.mutablePhoneOpinionTypeList addObjectsFromArray:values];
  return self;
}
- (HostDistribution_Builder*) clearPhoneOpinionTypeList {
  result.mutablePhoneOpinionTypeList = nil;
  return self;
}
- (HostDistribution_Builder*) addPhoneOpinionType:(PhoneOpinionType*) value {
  if (result.mutablePhoneOpinionTypeList == nil) {
    result.mutablePhoneOpinionTypeList = [NSMutableArray array];
  }
  [result.mutablePhoneOpinionTypeList addObject:value];
  return self;
}
- (BOOL) hasKfsNeedUpdate {
  return result.hasKfsNeedUpdate;
}
- (NSString*) kfsNeedUpdate {
  return result.kfsNeedUpdate;
}
- (HostDistribution_Builder*) setKfsNeedUpdate:(NSString*) value {
  result.hasKfsNeedUpdate = YES;
  result.kfsNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearKfsNeedUpdate {
  result.hasKfsNeedUpdate = NO;
  result.kfsNeedUpdate = @"";
  return self;
}
- (BOOL) hasFbsNeedUpdate {
  return result.hasFbsNeedUpdate;
}
- (NSString*) fbsNeedUpdate {
  return result.fbsNeedUpdate;
}
- (HostDistribution_Builder*) setFbsNeedUpdate:(NSString*) value {
  result.hasFbsNeedUpdate = YES;
  result.fbsNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearFbsNeedUpdate {
  result.hasFbsNeedUpdate = NO;
  result.fbsNeedUpdate = @"";
  return self;
}
- (BOOL) hasHbsNeedUpdate {
  return result.hasHbsNeedUpdate;
}
- (NSString*) hbsNeedUpdate {
  return result.hbsNeedUpdate;
}
- (HostDistribution_Builder*) setHbsNeedUpdate:(NSString*) value {
  result.hasHbsNeedUpdate = YES;
  result.hbsNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearHbsNeedUpdate {
  result.hasHbsNeedUpdate = NO;
  result.hbsNeedUpdate = @"";
  return self;
}
- (BOOL) hasSmNeedUpdate {
  return result.hasSmNeedUpdate;
}
- (NSString*) smNeedUpdate {
  return result.smNeedUpdate;
}
- (HostDistribution_Builder*) setSmNeedUpdate:(NSString*) value {
  result.hasSmNeedUpdate = YES;
  result.smNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearSmNeedUpdate {
  result.hasSmNeedUpdate = NO;
  result.smNeedUpdate = @"";
  return self;
}
- (BOOL) hasDtNeedUpdate {
  return result.hasDtNeedUpdate;
}
- (NSString*) dtNeedUpdate {
  return result.dtNeedUpdate;
}
- (HostDistribution_Builder*) setDtNeedUpdate:(NSString*) value {
  result.hasDtNeedUpdate = YES;
  result.dtNeedUpdate = value;
  return self;
}
- (HostDistribution_Builder*) clearDtNeedUpdate {
  result.hasDtNeedUpdate = NO;
  result.dtNeedUpdate = @"";
  return self;
}
- (BOOL) hasUpdateDesc {
  return result.hasUpdateDesc;
}
- (NSString*) updateDesc {
  return result.updateDesc;
}
- (HostDistribution_Builder*) setUpdateDesc:(NSString*) value {
  result.hasUpdateDesc = YES;
  result.updateDesc = value;
  return self;
}
- (HostDistribution_Builder*) clearUpdateDesc {
  result.hasUpdateDesc = NO;
  result.updateDesc = @"";
  return self;
}
@end

