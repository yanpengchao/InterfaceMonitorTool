// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FundDuration.pb.h"

@implementation FundDurationRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FundDurationRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CommonRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FundDruationInfo ()
@property (retain) NSString* jzrq;
@property (retain) NSString* jjjz;
@end

@implementation FundDruationInfo

- (BOOL) hasJzrq {
  return !!hasJzrq_;
}
- (void) setHasJzrq:(BOOL) value {
  hasJzrq_ = !!value;
}
@synthesize jzrq;
- (BOOL) hasJjjz {
  return !!hasJjjz_;
}
- (void) setHasJjjz:(BOOL) value {
  hasJjjz_ = !!value;
}
@synthesize jjjz;
- (void) dealloc {
  self.jzrq = nil;
  self.jjjz = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.jzrq = @"";
    self.jjjz = @"";
  }
  return self;
}
static FundDruationInfo* defaultFundDruationInfoInstance = nil;
+ (void) initialize {
  if (self == [FundDruationInfo class]) {
    defaultFundDruationInfoInstance = [[FundDruationInfo alloc] init];
  }
}
+ (FundDruationInfo*) defaultInstance {
  return defaultFundDruationInfoInstance;
}
- (FundDruationInfo*) defaultInstance {
  return defaultFundDruationInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJzrq) {
    [output writeString:1 value:self.jzrq];
  }
  if (self.hasJjjz) {
    [output writeString:2 value:self.jjjz];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJzrq) {
    size += computeStringSize(1, self.jzrq);
  }
  if (self.hasJjjz) {
    size += computeStringSize(2, self.jjjz);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FundDruationInfo*) parseFromData:(NSData*) data {
  return (FundDruationInfo*)[[[FundDruationInfo builder] mergeFromData:data] build];
}
+ (FundDruationInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundDruationInfo*)[[[FundDruationInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FundDruationInfo*) parseFromInputStream:(NSInputStream*) input {
  return (FundDruationInfo*)[[[FundDruationInfo builder] mergeFromInputStream:input] build];
}
+ (FundDruationInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundDruationInfo*)[[[FundDruationInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundDruationInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FundDruationInfo*)[[[FundDruationInfo builder] mergeFromCodedInputStream:input] build];
}
+ (FundDruationInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundDruationInfo*)[[[FundDruationInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundDruationInfo_Builder*) builder {
  return [[[FundDruationInfo_Builder alloc] init] autorelease];
}
+ (FundDruationInfo_Builder*) builderWithPrototype:(FundDruationInfo*) prototype {
  return [[FundDruationInfo builder] mergeFrom:prototype];
}
- (FundDruationInfo_Builder*) builder {
  return [FundDruationInfo builder];
}
@end

@interface FundDruationInfo_Builder()
@property (retain) FundDruationInfo* result;
@end

@implementation FundDruationInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FundDruationInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FundDruationInfo_Builder*) clear {
  self.result = [[[FundDruationInfo alloc] init] autorelease];
  return self;
}
- (FundDruationInfo_Builder*) clone {
  return [FundDruationInfo builderWithPrototype:result];
}
- (FundDruationInfo*) defaultInstance {
  return [FundDruationInfo defaultInstance];
}
- (FundDruationInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FundDruationInfo*) buildPartial {
  FundDruationInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FundDruationInfo_Builder*) mergeFrom:(FundDruationInfo*) other {
  if (other == [FundDruationInfo defaultInstance]) {
    return self;
  }
  if (other.hasJzrq) {
    [self setJzrq:other.jzrq];
  }
  if (other.hasJjjz) {
    [self setJjjz:other.jjjz];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FundDruationInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FundDruationInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setJzrq:[input readString]];
        break;
      }
      case 18: {
        [self setJjjz:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasJzrq {
  return result.hasJzrq;
}
- (NSString*) jzrq {
  return result.jzrq;
}
- (FundDruationInfo_Builder*) setJzrq:(NSString*) value {
  result.hasJzrq = YES;
  result.jzrq = value;
  return self;
}
- (FundDruationInfo_Builder*) clearJzrq {
  result.hasJzrq = NO;
  result.jzrq = @"";
  return self;
}
- (BOOL) hasJjjz {
  return result.hasJjjz;
}
- (NSString*) jjjz {
  return result.jjjz;
}
- (FundDruationInfo_Builder*) setJjjz:(NSString*) value {
  result.hasJjjz = YES;
  result.jjjz = value;
  return self;
}
- (FundDruationInfo_Builder*) clearJjjz {
  result.hasJjjz = NO;
  result.jjjz = @"";
  return self;
}
@end

@interface FundDruation ()
@property (retain) NSMutableArray* mutableFundDruationInfoList;
@property (retain) NSString* jjdm;
@property (retain) NSString* jyzt;
@end

@implementation FundDruation

@synthesize mutableFundDruationInfoList;
- (BOOL) hasJjdm {
  return !!hasJjdm_;
}
- (void) setHasJjdm:(BOOL) value {
  hasJjdm_ = !!value;
}
@synthesize jjdm;
- (BOOL) hasJyzt {
  return !!hasJyzt_;
}
- (void) setHasJyzt:(BOOL) value {
  hasJyzt_ = !!value;
}
@synthesize jyzt;
- (void) dealloc {
  self.mutableFundDruationInfoList = nil;
  self.jjdm = nil;
  self.jyzt = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.jjdm = @"";
    self.jyzt = @"";
  }
  return self;
}
static FundDruation* defaultFundDruationInstance = nil;
+ (void) initialize {
  if (self == [FundDruation class]) {
    defaultFundDruationInstance = [[FundDruation alloc] init];
  }
}
+ (FundDruation*) defaultInstance {
  return defaultFundDruationInstance;
}
- (FundDruation*) defaultInstance {
  return defaultFundDruationInstance;
}
- (NSArray*) fundDruationInfoList {
  return mutableFundDruationInfoList;
}
- (FundDruationInfo*) fundDruationInfoAtIndex:(int32_t) index {
  id value = [mutableFundDruationInfoList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (FundDruationInfo* element in self.fundDruationInfoList) {
    [output writeMessage:1 value:element];
  }
  if (self.hasJjdm) {
    [output writeString:2 value:self.jjdm];
  }
  if (self.hasJyzt) {
    [output writeString:3 value:self.jyzt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (FundDruationInfo* element in self.fundDruationInfoList) {
    size += computeMessageSize(1, element);
  }
  if (self.hasJjdm) {
    size += computeStringSize(2, self.jjdm);
  }
  if (self.hasJyzt) {
    size += computeStringSize(3, self.jyzt);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FundDruation*) parseFromData:(NSData*) data {
  return (FundDruation*)[[[FundDruation builder] mergeFromData:data] build];
}
+ (FundDruation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundDruation*)[[[FundDruation builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FundDruation*) parseFromInputStream:(NSInputStream*) input {
  return (FundDruation*)[[[FundDruation builder] mergeFromInputStream:input] build];
}
+ (FundDruation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundDruation*)[[[FundDruation builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundDruation*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FundDruation*)[[[FundDruation builder] mergeFromCodedInputStream:input] build];
}
+ (FundDruation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundDruation*)[[[FundDruation builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundDruation_Builder*) builder {
  return [[[FundDruation_Builder alloc] init] autorelease];
}
+ (FundDruation_Builder*) builderWithPrototype:(FundDruation*) prototype {
  return [[FundDruation builder] mergeFrom:prototype];
}
- (FundDruation_Builder*) builder {
  return [FundDruation builder];
}
@end

@interface FundDruation_Builder()
@property (retain) FundDruation* result;
@end

@implementation FundDruation_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FundDruation alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FundDruation_Builder*) clear {
  self.result = [[[FundDruation alloc] init] autorelease];
  return self;
}
- (FundDruation_Builder*) clone {
  return [FundDruation builderWithPrototype:result];
}
- (FundDruation*) defaultInstance {
  return [FundDruation defaultInstance];
}
- (FundDruation*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FundDruation*) buildPartial {
  FundDruation* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FundDruation_Builder*) mergeFrom:(FundDruation*) other {
  if (other == [FundDruation defaultInstance]) {
    return self;
  }
  if (other.mutableFundDruationInfoList.count > 0) {
    if (result.mutableFundDruationInfoList == nil) {
      result.mutableFundDruationInfoList = [NSMutableArray array];
    }
    [result.mutableFundDruationInfoList addObjectsFromArray:other.mutableFundDruationInfoList];
  }
  if (other.hasJjdm) {
    [self setJjdm:other.jjdm];
  }
  if (other.hasJyzt) {
    [self setJyzt:other.jyzt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FundDruation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FundDruation_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        FundDruationInfo_Builder* subBuilder = [FundDruationInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFundDruationInfo:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setJjdm:[input readString]];
        break;
      }
      case 26: {
        [self setJyzt:[input readString]];
        break;
      }
    }
  }
}
- (NSArray*) fundDruationInfoList {
  if (result.mutableFundDruationInfoList == nil) { return [NSArray array]; }
  return result.mutableFundDruationInfoList;
}
- (FundDruationInfo*) fundDruationInfoAtIndex:(int32_t) index {
  return [result fundDruationInfoAtIndex:index];
}
- (FundDruation_Builder*) replaceFundDruationInfoAtIndex:(int32_t) index with:(FundDruationInfo*) value {
  [result.mutableFundDruationInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FundDruation_Builder*) addAllFundDruationInfo:(NSArray*) values {
  if (result.mutableFundDruationInfoList == nil) {
    result.mutableFundDruationInfoList = [NSMutableArray array];
  }
  [result.mutableFundDruationInfoList addObjectsFromArray:values];
  return self;
}
- (FundDruation_Builder*) clearFundDruationInfoList {
  result.mutableFundDruationInfoList = nil;
  return self;
}
- (FundDruation_Builder*) addFundDruationInfo:(FundDruationInfo*) value {
  if (result.mutableFundDruationInfoList == nil) {
    result.mutableFundDruationInfoList = [NSMutableArray array];
  }
  [result.mutableFundDruationInfoList addObject:value];
  return self;
}
- (BOOL) hasJjdm {
  return result.hasJjdm;
}
- (NSString*) jjdm {
  return result.jjdm;
}
- (FundDruation_Builder*) setJjdm:(NSString*) value {
  result.hasJjdm = YES;
  result.jjdm = value;
  return self;
}
- (FundDruation_Builder*) clearJjdm {
  result.hasJjdm = NO;
  result.jjdm = @"";
  return self;
}
- (BOOL) hasJyzt {
  return result.hasJyzt;
}
- (NSString*) jyzt {
  return result.jyzt;
}
- (FundDruation_Builder*) setJyzt:(NSString*) value {
  result.hasJyzt = YES;
  result.jyzt = value;
  return self;
}
- (FundDruation_Builder*) clearJyzt {
  result.hasJyzt = NO;
  result.jyzt = @"";
  return self;
}
@end

@interface FundDruationProto ()
@property (retain) Common* common;
@property (retain) NSMutableArray* mutableFundDruationList;
@end

@implementation FundDruationProto

- (BOOL) hasCommon {
  return !!hasCommon_;
}
- (void) setHasCommon:(BOOL) value {
  hasCommon_ = !!value;
}
@synthesize common;
@synthesize mutableFundDruationList;
- (void) dealloc {
  self.common = nil;
  self.mutableFundDruationList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.common = [Common defaultInstance];
  }
  return self;
}
static FundDruationProto* defaultFundDruationProtoInstance = nil;
+ (void) initialize {
  if (self == [FundDruationProto class]) {
    defaultFundDruationProtoInstance = [[FundDruationProto alloc] init];
  }
}
+ (FundDruationProto*) defaultInstance {
  return defaultFundDruationProtoInstance;
}
- (FundDruationProto*) defaultInstance {
  return defaultFundDruationProtoInstance;
}
- (NSArray*) fundDruationList {
  return mutableFundDruationList;
}
- (FundDruation*) fundDruationAtIndex:(int32_t) index {
  id value = [mutableFundDruationList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommon) {
    [output writeMessage:1 value:self.common];
  }
  for (FundDruation* element in self.fundDruationList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCommon) {
    size += computeMessageSize(1, self.common);
  }
  for (FundDruation* element in self.fundDruationList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FundDruationProto*) parseFromData:(NSData*) data {
  return (FundDruationProto*)[[[FundDruationProto builder] mergeFromData:data] build];
}
+ (FundDruationProto*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundDruationProto*)[[[FundDruationProto builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FundDruationProto*) parseFromInputStream:(NSInputStream*) input {
  return (FundDruationProto*)[[[FundDruationProto builder] mergeFromInputStream:input] build];
}
+ (FundDruationProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundDruationProto*)[[[FundDruationProto builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundDruationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FundDruationProto*)[[[FundDruationProto builder] mergeFromCodedInputStream:input] build];
}
+ (FundDruationProto*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundDruationProto*)[[[FundDruationProto builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundDruationProto_Builder*) builder {
  return [[[FundDruationProto_Builder alloc] init] autorelease];
}
+ (FundDruationProto_Builder*) builderWithPrototype:(FundDruationProto*) prototype {
  return [[FundDruationProto builder] mergeFrom:prototype];
}
- (FundDruationProto_Builder*) builder {
  return [FundDruationProto builder];
}
@end

@interface FundDruationProto_Builder()
@property (retain) FundDruationProto* result;
@end

@implementation FundDruationProto_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FundDruationProto alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FundDruationProto_Builder*) clear {
  self.result = [[[FundDruationProto alloc] init] autorelease];
  return self;
}
- (FundDruationProto_Builder*) clone {
  return [FundDruationProto builderWithPrototype:result];
}
- (FundDruationProto*) defaultInstance {
  return [FundDruationProto defaultInstance];
}
- (FundDruationProto*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FundDruationProto*) buildPartial {
  FundDruationProto* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FundDruationProto_Builder*) mergeFrom:(FundDruationProto*) other {
  if (other == [FundDruationProto defaultInstance]) {
    return self;
  }
  if (other.hasCommon) {
    [self mergeCommon:other.common];
  }
  if (other.mutableFundDruationList.count > 0) {
    if (result.mutableFundDruationList == nil) {
      result.mutableFundDruationList = [NSMutableArray array];
    }
    [result.mutableFundDruationList addObjectsFromArray:other.mutableFundDruationList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FundDruationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FundDruationProto_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Common_Builder* subBuilder = [Common builder];
        if (self.hasCommon) {
          [subBuilder mergeFrom:self.common];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCommon:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FundDruation_Builder* subBuilder = [FundDruation builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFundDruation:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasCommon {
  return result.hasCommon;
}
- (Common*) common {
  return result.common;
}
- (FundDruationProto_Builder*) setCommon:(Common*) value {
  result.hasCommon = YES;
  result.common = value;
  return self;
}
- (FundDruationProto_Builder*) setCommonBuilder:(Common_Builder*) builderForValue {
  return [self setCommon:[builderForValue build]];
}
- (FundDruationProto_Builder*) mergeCommon:(Common*) value {
  if (result.hasCommon &&
      result.common != [Common defaultInstance]) {
    result.common =
      [[[Common builderWithPrototype:result.common] mergeFrom:value] buildPartial];
  } else {
    result.common = value;
  }
  result.hasCommon = YES;
  return self;
}
- (FundDruationProto_Builder*) clearCommon {
  result.hasCommon = NO;
  result.common = [Common defaultInstance];
  return self;
}
- (NSArray*) fundDruationList {
  if (result.mutableFundDruationList == nil) { return [NSArray array]; }
  return result.mutableFundDruationList;
}
- (FundDruation*) fundDruationAtIndex:(int32_t) index {
  return [result fundDruationAtIndex:index];
}
- (FundDruationProto_Builder*) replaceFundDruationAtIndex:(int32_t) index with:(FundDruation*) value {
  [result.mutableFundDruationList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FundDruationProto_Builder*) addAllFundDruation:(NSArray*) values {
  if (result.mutableFundDruationList == nil) {
    result.mutableFundDruationList = [NSMutableArray array];
  }
  [result.mutableFundDruationList addObjectsFromArray:values];
  return self;
}
- (FundDruationProto_Builder*) clearFundDruationList {
  result.mutableFundDruationList = nil;
  return self;
}
- (FundDruationProto_Builder*) addFundDruation:(FundDruation*) value {
  if (result.mutableFundDruationList == nil) {
    result.mutableFundDruationList = [NSMutableArray array];
  }
  [result.mutableFundDruationList addObject:value];
  return self;
}
@end

