// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "UserFavorite.pb.h"

@implementation UserFavoriteRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UserFavoriteRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface UserFavorite ()
@property (retain) NSString* favoriteObject;
@end

@implementation UserFavorite

- (BOOL) hasFavoriteObject {
  return !!hasFavoriteObject_;
}
- (void) setHasFavoriteObject:(BOOL) value {
  hasFavoriteObject_ = !!value;
}
@synthesize favoriteObject;
- (void) dealloc {
  self.favoriteObject = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.favoriteObject = @"";
  }
  return self;
}
static UserFavorite* defaultUserFavoriteInstance = nil;
+ (void) initialize {
  if (self == [UserFavorite class]) {
    defaultUserFavoriteInstance = [[UserFavorite alloc] init];
  }
}
+ (UserFavorite*) defaultInstance {
  return defaultUserFavoriteInstance;
}
- (UserFavorite*) defaultInstance {
  return defaultUserFavoriteInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFavoriteObject) {
    [output writeString:1 value:self.favoriteObject];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFavoriteObject) {
    size += computeStringSize(1, self.favoriteObject);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UserFavorite*) parseFromData:(NSData*) data {
  return (UserFavorite*)[[[UserFavorite builder] mergeFromData:data] build];
}
+ (UserFavorite*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserFavorite*)[[[UserFavorite builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UserFavorite*) parseFromInputStream:(NSInputStream*) input {
  return (UserFavorite*)[[[UserFavorite builder] mergeFromInputStream:input] build];
}
+ (UserFavorite*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserFavorite*)[[[UserFavorite builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserFavorite*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UserFavorite*)[[[UserFavorite builder] mergeFromCodedInputStream:input] build];
}
+ (UserFavorite*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UserFavorite*)[[[UserFavorite builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UserFavorite_Builder*) builder {
  return [[[UserFavorite_Builder alloc] init] autorelease];
}
+ (UserFavorite_Builder*) builderWithPrototype:(UserFavorite*) prototype {
  return [[UserFavorite builder] mergeFrom:prototype];
}
- (UserFavorite_Builder*) builder {
  return [UserFavorite builder];
}
@end

@interface UserFavorite_Builder()
@property (retain) UserFavorite* result;
@end

@implementation UserFavorite_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UserFavorite alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UserFavorite_Builder*) clear {
  self.result = [[[UserFavorite alloc] init] autorelease];
  return self;
}
- (UserFavorite_Builder*) clone {
  return [UserFavorite builderWithPrototype:result];
}
- (UserFavorite*) defaultInstance {
  return [UserFavorite defaultInstance];
}
- (UserFavorite*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UserFavorite*) buildPartial {
  UserFavorite* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UserFavorite_Builder*) mergeFrom:(UserFavorite*) other {
  if (other == [UserFavorite defaultInstance]) {
    return self;
  }
  if (other.hasFavoriteObject) {
    [self setFavoriteObject:other.favoriteObject];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UserFavorite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UserFavorite_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFavoriteObject:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFavoriteObject {
  return result.hasFavoriteObject;
}
- (NSString*) favoriteObject {
  return result.favoriteObject;
}
- (UserFavorite_Builder*) setFavoriteObject:(NSString*) value {
  result.hasFavoriteObject = YES;
  result.favoriteObject = value;
  return self;
}
- (UserFavorite_Builder*) clearFavoriteObject {
  result.hasFavoriteObject = NO;
  result.favoriteObject = @"";
  return self;
}
@end

