// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FundBasic.pb.h"

@implementation FundBasicRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FundBasicRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FundBasic ()
@property (retain) NSString* jjfl;
@property (retain) NSString* jjdm;
@property (retain) NSString* jjpy;
@property (retain) NSString* jjjc;
@property (retain) NSString* jzdw;
@property (retain) NSString* jyzt;
@property (retain) NSString* status;
@end

@implementation FundBasic

- (BOOL) hasJjfl {
  return !!hasJjfl_;
}
- (void) setHasJjfl:(BOOL) value {
  hasJjfl_ = !!value;
}
@synthesize jjfl;
- (BOOL) hasJjdm {
  return !!hasJjdm_;
}
- (void) setHasJjdm:(BOOL) value {
  hasJjdm_ = !!value;
}
@synthesize jjdm;
- (BOOL) hasJjpy {
  return !!hasJjpy_;
}
- (void) setHasJjpy:(BOOL) value {
  hasJjpy_ = !!value;
}
@synthesize jjpy;
- (BOOL) hasJjjc {
  return !!hasJjjc_;
}
- (void) setHasJjjc:(BOOL) value {
  hasJjjc_ = !!value;
}
@synthesize jjjc;
- (BOOL) hasJzdw {
  return !!hasJzdw_;
}
- (void) setHasJzdw:(BOOL) value {
  hasJzdw_ = !!value;
}
@synthesize jzdw;
- (BOOL) hasJyzt {
  return !!hasJyzt_;
}
- (void) setHasJyzt:(BOOL) value {
  hasJyzt_ = !!value;
}
@synthesize jyzt;
- (BOOL) hasStatus {
  return !!hasStatus_;
}
- (void) setHasStatus:(BOOL) value {
  hasStatus_ = !!value;
}
@synthesize status;
- (void) dealloc {
  self.jjfl = nil;
  self.jjdm = nil;
  self.jjpy = nil;
  self.jjjc = nil;
  self.jzdw = nil;
  self.jyzt = nil;
  self.status = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.jjfl = @"";
    self.jjdm = @"";
    self.jjpy = @"";
    self.jjjc = @"";
    self.jzdw = @"";
    self.jyzt = @"";
    self.status = @"";
  }
  return self;
}
static FundBasic* defaultFundBasicInstance = nil;
+ (void) initialize {
  if (self == [FundBasic class]) {
    defaultFundBasicInstance = [[FundBasic alloc] init];
  }
}
+ (FundBasic*) defaultInstance {
  return defaultFundBasicInstance;
}
- (FundBasic*) defaultInstance {
  return defaultFundBasicInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJjfl) {
    [output writeString:1 value:self.jjfl];
  }
  if (self.hasJjdm) {
    [output writeString:2 value:self.jjdm];
  }
  if (self.hasJjpy) {
    [output writeString:3 value:self.jjpy];
  }
  if (self.hasJjjc) {
    [output writeString:4 value:self.jjjc];
  }
  if (self.hasJzdw) {
    [output writeString:5 value:self.jzdw];
  }
  if (self.hasJyzt) {
    [output writeString:6 value:self.jyzt];
  }
  if (self.hasStatus) {
    [output writeString:7 value:self.status];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJjfl) {
    size += computeStringSize(1, self.jjfl);
  }
  if (self.hasJjdm) {
    size += computeStringSize(2, self.jjdm);
  }
  if (self.hasJjpy) {
    size += computeStringSize(3, self.jjpy);
  }
  if (self.hasJjjc) {
    size += computeStringSize(4, self.jjjc);
  }
  if (self.hasJzdw) {
    size += computeStringSize(5, self.jzdw);
  }
  if (self.hasJyzt) {
    size += computeStringSize(6, self.jyzt);
  }
  if (self.hasStatus) {
    size += computeStringSize(7, self.status);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FundBasic*) parseFromData:(NSData*) data {
  return (FundBasic*)[[[FundBasic builder] mergeFromData:data] build];
}
+ (FundBasic*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundBasic*)[[[FundBasic builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FundBasic*) parseFromInputStream:(NSInputStream*) input {
  return (FundBasic*)[[[FundBasic builder] mergeFromInputStream:input] build];
}
+ (FundBasic*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundBasic*)[[[FundBasic builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundBasic*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FundBasic*)[[[FundBasic builder] mergeFromCodedInputStream:input] build];
}
+ (FundBasic*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundBasic*)[[[FundBasic builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundBasic_Builder*) builder {
  return [[[FundBasic_Builder alloc] init] autorelease];
}
+ (FundBasic_Builder*) builderWithPrototype:(FundBasic*) prototype {
  return [[FundBasic builder] mergeFrom:prototype];
}
- (FundBasic_Builder*) builder {
  return [FundBasic builder];
}
@end

@interface FundBasic_Builder()
@property (retain) FundBasic* result;
@end

@implementation FundBasic_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FundBasic alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FundBasic_Builder*) clear {
  self.result = [[[FundBasic alloc] init] autorelease];
  return self;
}
- (FundBasic_Builder*) clone {
  return [FundBasic builderWithPrototype:result];
}
- (FundBasic*) defaultInstance {
  return [FundBasic defaultInstance];
}
- (FundBasic*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FundBasic*) buildPartial {
  FundBasic* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FundBasic_Builder*) mergeFrom:(FundBasic*) other {
  if (other == [FundBasic defaultInstance]) {
    return self;
  }
  if (other.hasJjfl) {
    [self setJjfl:other.jjfl];
  }
  if (other.hasJjdm) {
    [self setJjdm:other.jjdm];
  }
  if (other.hasJjpy) {
    [self setJjpy:other.jjpy];
  }
  if (other.hasJjjc) {
    [self setJjjc:other.jjjc];
  }
  if (other.hasJzdw) {
    [self setJzdw:other.jzdw];
  }
  if (other.hasJyzt) {
    [self setJyzt:other.jyzt];
  }
  if (other.hasStatus) {
    [self setStatus:other.status];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FundBasic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FundBasic_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setJjfl:[input readString]];
        break;
      }
      case 18: {
        [self setJjdm:[input readString]];
        break;
      }
      case 26: {
        [self setJjpy:[input readString]];
        break;
      }
      case 34: {
        [self setJjjc:[input readString]];
        break;
      }
      case 42: {
        [self setJzdw:[input readString]];
        break;
      }
      case 50: {
        [self setJyzt:[input readString]];
        break;
      }
      case 58: {
        [self setStatus:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasJjfl {
  return result.hasJjfl;
}
- (NSString*) jjfl {
  return result.jjfl;
}
- (FundBasic_Builder*) setJjfl:(NSString*) value {
  result.hasJjfl = YES;
  result.jjfl = value;
  return self;
}
- (FundBasic_Builder*) clearJjfl {
  result.hasJjfl = NO;
  result.jjfl = @"";
  return self;
}
- (BOOL) hasJjdm {
  return result.hasJjdm;
}
- (NSString*) jjdm {
  return result.jjdm;
}
- (FundBasic_Builder*) setJjdm:(NSString*) value {
  result.hasJjdm = YES;
  result.jjdm = value;
  return self;
}
- (FundBasic_Builder*) clearJjdm {
  result.hasJjdm = NO;
  result.jjdm = @"";
  return self;
}
- (BOOL) hasJjpy {
  return result.hasJjpy;
}
- (NSString*) jjpy {
  return result.jjpy;
}
- (FundBasic_Builder*) setJjpy:(NSString*) value {
  result.hasJjpy = YES;
  result.jjpy = value;
  return self;
}
- (FundBasic_Builder*) clearJjpy {
  result.hasJjpy = NO;
  result.jjpy = @"";
  return self;
}
- (BOOL) hasJjjc {
  return result.hasJjjc;
}
- (NSString*) jjjc {
  return result.jjjc;
}
- (FundBasic_Builder*) setJjjc:(NSString*) value {
  result.hasJjjc = YES;
  result.jjjc = value;
  return self;
}
- (FundBasic_Builder*) clearJjjc {
  result.hasJjjc = NO;
  result.jjjc = @"";
  return self;
}
- (BOOL) hasJzdw {
  return result.hasJzdw;
}
- (NSString*) jzdw {
  return result.jzdw;
}
- (FundBasic_Builder*) setJzdw:(NSString*) value {
  result.hasJzdw = YES;
  result.jzdw = value;
  return self;
}
- (FundBasic_Builder*) clearJzdw {
  result.hasJzdw = NO;
  result.jzdw = @"";
  return self;
}
- (BOOL) hasJyzt {
  return result.hasJyzt;
}
- (NSString*) jyzt {
  return result.jyzt;
}
- (FundBasic_Builder*) setJyzt:(NSString*) value {
  result.hasJyzt = YES;
  result.jyzt = value;
  return self;
}
- (FundBasic_Builder*) clearJyzt {
  result.hasJyzt = NO;
  result.jyzt = @"";
  return self;
}
- (BOOL) hasStatus {
  return result.hasStatus;
}
- (NSString*) status {
  return result.status;
}
- (FundBasic_Builder*) setStatus:(NSString*) value {
  result.hasStatus = YES;
  result.status = value;
  return self;
}
- (FundBasic_Builder*) clearStatus {
  result.hasStatus = NO;
  result.status = @"";
  return self;
}
@end

