// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Issue.pb.h"

@implementation IssueRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [IssueRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Issue ()
@property (retain) NSString* jlzj;
@property (retain) NSString* wzbt;
@property (retain) NSString* fbrq;
@end

@implementation Issue

- (BOOL) hasJlzj {
  return !!hasJlzj_;
}
- (void) setHasJlzj:(BOOL) value {
  hasJlzj_ = !!value;
}
@synthesize jlzj;
- (BOOL) hasWzbt {
  return !!hasWzbt_;
}
- (void) setHasWzbt:(BOOL) value {
  hasWzbt_ = !!value;
}
@synthesize wzbt;
- (BOOL) hasFbrq {
  return !!hasFbrq_;
}
- (void) setHasFbrq:(BOOL) value {
  hasFbrq_ = !!value;
}
@synthesize fbrq;
- (void) dealloc {
  self.jlzj = nil;
  self.wzbt = nil;
  self.fbrq = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.jlzj = @"";
    self.wzbt = @"";
    self.fbrq = @"";
  }
  return self;
}
static Issue* defaultIssueInstance = nil;
+ (void) initialize {
  if (self == [Issue class]) {
    defaultIssueInstance = [[Issue alloc] init];
  }
}
+ (Issue*) defaultInstance {
  return defaultIssueInstance;
}
- (Issue*) defaultInstance {
  return defaultIssueInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJlzj) {
    [output writeString:1 value:self.jlzj];
  }
  if (self.hasWzbt) {
    [output writeString:2 value:self.wzbt];
  }
  if (self.hasFbrq) {
    [output writeString:3 value:self.fbrq];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJlzj) {
    size += computeStringSize(1, self.jlzj);
  }
  if (self.hasWzbt) {
    size += computeStringSize(2, self.wzbt);
  }
  if (self.hasFbrq) {
    size += computeStringSize(3, self.fbrq);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Issue*) parseFromData:(NSData*) data {
  return (Issue*)[[[Issue builder] mergeFromData:data] build];
}
+ (Issue*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Issue*)[[[Issue builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Issue*) parseFromInputStream:(NSInputStream*) input {
  return (Issue*)[[[Issue builder] mergeFromInputStream:input] build];
}
+ (Issue*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Issue*)[[[Issue builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Issue*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Issue*)[[[Issue builder] mergeFromCodedInputStream:input] build];
}
+ (Issue*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Issue*)[[[Issue builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Issue_Builder*) builder {
  return [[[Issue_Builder alloc] init] autorelease];
}
+ (Issue_Builder*) builderWithPrototype:(Issue*) prototype {
  return [[Issue builder] mergeFrom:prototype];
}
- (Issue_Builder*) builder {
  return [Issue builder];
}
@end

@interface Issue_Builder()
@property (retain) Issue* result;
@end

@implementation Issue_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Issue alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Issue_Builder*) clear {
  self.result = [[[Issue alloc] init] autorelease];
  return self;
}
- (Issue_Builder*) clone {
  return [Issue builderWithPrototype:result];
}
- (Issue*) defaultInstance {
  return [Issue defaultInstance];
}
- (Issue*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Issue*) buildPartial {
  Issue* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Issue_Builder*) mergeFrom:(Issue*) other {
  if (other == [Issue defaultInstance]) {
    return self;
  }
  if (other.hasJlzj) {
    [self setJlzj:other.jlzj];
  }
  if (other.hasWzbt) {
    [self setWzbt:other.wzbt];
  }
  if (other.hasFbrq) {
    [self setFbrq:other.fbrq];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Issue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Issue_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setJlzj:[input readString]];
        break;
      }
      case 18: {
        [self setWzbt:[input readString]];
        break;
      }
      case 26: {
        [self setFbrq:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasJlzj {
  return result.hasJlzj;
}
- (NSString*) jlzj {
  return result.jlzj;
}
- (Issue_Builder*) setJlzj:(NSString*) value {
  result.hasJlzj = YES;
  result.jlzj = value;
  return self;
}
- (Issue_Builder*) clearJlzj {
  result.hasJlzj = NO;
  result.jlzj = @"";
  return self;
}
- (BOOL) hasWzbt {
  return result.hasWzbt;
}
- (NSString*) wzbt {
  return result.wzbt;
}
- (Issue_Builder*) setWzbt:(NSString*) value {
  result.hasWzbt = YES;
  result.wzbt = value;
  return self;
}
- (Issue_Builder*) clearWzbt {
  result.hasWzbt = NO;
  result.wzbt = @"";
  return self;
}
- (BOOL) hasFbrq {
  return result.hasFbrq;
}
- (NSString*) fbrq {
  return result.fbrq;
}
- (Issue_Builder*) setFbrq:(NSString*) value {
  result.hasFbrq = YES;
  result.fbrq = value;
  return self;
}
- (Issue_Builder*) clearFbrq {
  result.hasFbrq = NO;
  result.fbrq = @"";
  return self;
}
@end

