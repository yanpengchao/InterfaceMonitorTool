// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Fundyxzcg.pb.h"

@implementation FundyxzcgRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FundyxzcgRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [CommonRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface FundHiddenStockInfoProb ()
@property (retain) NSString* jjdm;
@property (retain) NSString* jjjc;
@property (retain) NSString* jzrq;
@end

@implementation FundHiddenStockInfoProb

- (BOOL) hasJjdm {
  return !!hasJjdm_;
}
- (void) setHasJjdm:(BOOL) value {
  hasJjdm_ = !!value;
}
@synthesize jjdm;
- (BOOL) hasJjjc {
  return !!hasJjjc_;
}
- (void) setHasJjjc:(BOOL) value {
  hasJjjc_ = !!value;
}
@synthesize jjjc;
- (BOOL) hasJzrq {
  return !!hasJzrq_;
}
- (void) setHasJzrq:(BOOL) value {
  hasJzrq_ = !!value;
}
@synthesize jzrq;
- (void) dealloc {
  self.jjdm = nil;
  self.jjjc = nil;
  self.jzrq = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.jjdm = @"";
    self.jjjc = @"";
    self.jzrq = @"";
  }
  return self;
}
static FundHiddenStockInfoProb* defaultFundHiddenStockInfoProbInstance = nil;
+ (void) initialize {
  if (self == [FundHiddenStockInfoProb class]) {
    defaultFundHiddenStockInfoProbInstance = [[FundHiddenStockInfoProb alloc] init];
  }
}
+ (FundHiddenStockInfoProb*) defaultInstance {
  return defaultFundHiddenStockInfoProbInstance;
}
- (FundHiddenStockInfoProb*) defaultInstance {
  return defaultFundHiddenStockInfoProbInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJjdm) {
    [output writeString:1 value:self.jjdm];
  }
  if (self.hasJjjc) {
    [output writeString:2 value:self.jjjc];
  }
  if (self.hasJzrq) {
    [output writeString:3 value:self.jzrq];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJjdm) {
    size += computeStringSize(1, self.jjdm);
  }
  if (self.hasJjjc) {
    size += computeStringSize(2, self.jjjc);
  }
  if (self.hasJzrq) {
    size += computeStringSize(3, self.jzrq);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FundHiddenStockInfoProb*) parseFromData:(NSData*) data {
  return (FundHiddenStockInfoProb*)[[[FundHiddenStockInfoProb builder] mergeFromData:data] build];
}
+ (FundHiddenStockInfoProb*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundHiddenStockInfoProb*)[[[FundHiddenStockInfoProb builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FundHiddenStockInfoProb*) parseFromInputStream:(NSInputStream*) input {
  return (FundHiddenStockInfoProb*)[[[FundHiddenStockInfoProb builder] mergeFromInputStream:input] build];
}
+ (FundHiddenStockInfoProb*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundHiddenStockInfoProb*)[[[FundHiddenStockInfoProb builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundHiddenStockInfoProb*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FundHiddenStockInfoProb*)[[[FundHiddenStockInfoProb builder] mergeFromCodedInputStream:input] build];
}
+ (FundHiddenStockInfoProb*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundHiddenStockInfoProb*)[[[FundHiddenStockInfoProb builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundHiddenStockInfoProb_Builder*) builder {
  return [[[FundHiddenStockInfoProb_Builder alloc] init] autorelease];
}
+ (FundHiddenStockInfoProb_Builder*) builderWithPrototype:(FundHiddenStockInfoProb*) prototype {
  return [[FundHiddenStockInfoProb builder] mergeFrom:prototype];
}
- (FundHiddenStockInfoProb_Builder*) builder {
  return [FundHiddenStockInfoProb builder];
}
@end

@interface FundHiddenStockInfoProb_Builder()
@property (retain) FundHiddenStockInfoProb* result;
@end

@implementation FundHiddenStockInfoProb_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FundHiddenStockInfoProb alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FundHiddenStockInfoProb_Builder*) clear {
  self.result = [[[FundHiddenStockInfoProb alloc] init] autorelease];
  return self;
}
- (FundHiddenStockInfoProb_Builder*) clone {
  return [FundHiddenStockInfoProb builderWithPrototype:result];
}
- (FundHiddenStockInfoProb*) defaultInstance {
  return [FundHiddenStockInfoProb defaultInstance];
}
- (FundHiddenStockInfoProb*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FundHiddenStockInfoProb*) buildPartial {
  FundHiddenStockInfoProb* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FundHiddenStockInfoProb_Builder*) mergeFrom:(FundHiddenStockInfoProb*) other {
  if (other == [FundHiddenStockInfoProb defaultInstance]) {
    return self;
  }
  if (other.hasJjdm) {
    [self setJjdm:other.jjdm];
  }
  if (other.hasJjjc) {
    [self setJjjc:other.jjjc];
  }
  if (other.hasJzrq) {
    [self setJzrq:other.jzrq];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FundHiddenStockInfoProb_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FundHiddenStockInfoProb_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setJjdm:[input readString]];
        break;
      }
      case 18: {
        [self setJjjc:[input readString]];
        break;
      }
      case 26: {
        [self setJzrq:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasJjdm {
  return result.hasJjdm;
}
- (NSString*) jjdm {
  return result.jjdm;
}
- (FundHiddenStockInfoProb_Builder*) setJjdm:(NSString*) value {
  result.hasJjdm = YES;
  result.jjdm = value;
  return self;
}
- (FundHiddenStockInfoProb_Builder*) clearJjdm {
  result.hasJjdm = NO;
  result.jjdm = @"";
  return self;
}
- (BOOL) hasJjjc {
  return result.hasJjjc;
}
- (NSString*) jjjc {
  return result.jjjc;
}
- (FundHiddenStockInfoProb_Builder*) setJjjc:(NSString*) value {
  result.hasJjjc = YES;
  result.jjjc = value;
  return self;
}
- (FundHiddenStockInfoProb_Builder*) clearJjjc {
  result.hasJjjc = NO;
  result.jjjc = @"";
  return self;
}
- (BOOL) hasJzrq {
  return result.hasJzrq;
}
- (NSString*) jzrq {
  return result.jzrq;
}
- (FundHiddenStockInfoProb_Builder*) setJzrq:(NSString*) value {
  result.hasJzrq = YES;
  result.jzrq = value;
  return self;
}
- (FundHiddenStockInfoProb_Builder*) clearJzrq {
  result.hasJzrq = NO;
  result.jzrq = @"";
  return self;
}
@end

@interface FundYxzcgMain ()
@property (retain) Common* common;
@property (retain) NSMutableArray* mutableFundHiddenStockInfoProbList;
@property int32_t totalNum;
@end

@implementation FundYxzcgMain

- (BOOL) hasCommon {
  return !!hasCommon_;
}
- (void) setHasCommon:(BOOL) value {
  hasCommon_ = !!value;
}
@synthesize common;
@synthesize mutableFundHiddenStockInfoProbList;
- (BOOL) hasTotalNum {
  return !!hasTotalNum_;
}
- (void) setHasTotalNum:(BOOL) value {
  hasTotalNum_ = !!value;
}
@synthesize totalNum;
- (void) dealloc {
  self.common = nil;
  self.mutableFundHiddenStockInfoProbList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.common = [Common defaultInstance];
    self.totalNum = 0;
  }
  return self;
}
static FundYxzcgMain* defaultFundYxzcgMainInstance = nil;
+ (void) initialize {
  if (self == [FundYxzcgMain class]) {
    defaultFundYxzcgMainInstance = [[FundYxzcgMain alloc] init];
  }
}
+ (FundYxzcgMain*) defaultInstance {
  return defaultFundYxzcgMainInstance;
}
- (FundYxzcgMain*) defaultInstance {
  return defaultFundYxzcgMainInstance;
}
- (NSArray*) fundHiddenStockInfoProbList {
  return mutableFundHiddenStockInfoProbList;
}
- (FundHiddenStockInfoProb*) fundHiddenStockInfoProbAtIndex:(int32_t) index {
  id value = [mutableFundHiddenStockInfoProbList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCommon) {
    [output writeMessage:1 value:self.common];
  }
  for (FundHiddenStockInfoProb* element in self.fundHiddenStockInfoProbList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasTotalNum) {
    [output writeInt32:3 value:self.totalNum];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCommon) {
    size += computeMessageSize(1, self.common);
  }
  for (FundHiddenStockInfoProb* element in self.fundHiddenStockInfoProbList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasTotalNum) {
    size += computeInt32Size(3, self.totalNum);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FundYxzcgMain*) parseFromData:(NSData*) data {
  return (FundYxzcgMain*)[[[FundYxzcgMain builder] mergeFromData:data] build];
}
+ (FundYxzcgMain*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundYxzcgMain*)[[[FundYxzcgMain builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FundYxzcgMain*) parseFromInputStream:(NSInputStream*) input {
  return (FundYxzcgMain*)[[[FundYxzcgMain builder] mergeFromInputStream:input] build];
}
+ (FundYxzcgMain*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundYxzcgMain*)[[[FundYxzcgMain builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundYxzcgMain*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FundYxzcgMain*)[[[FundYxzcgMain builder] mergeFromCodedInputStream:input] build];
}
+ (FundYxzcgMain*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FundYxzcgMain*)[[[FundYxzcgMain builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FundYxzcgMain_Builder*) builder {
  return [[[FundYxzcgMain_Builder alloc] init] autorelease];
}
+ (FundYxzcgMain_Builder*) builderWithPrototype:(FundYxzcgMain*) prototype {
  return [[FundYxzcgMain builder] mergeFrom:prototype];
}
- (FundYxzcgMain_Builder*) builder {
  return [FundYxzcgMain builder];
}
@end

@interface FundYxzcgMain_Builder()
@property (retain) FundYxzcgMain* result;
@end

@implementation FundYxzcgMain_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FundYxzcgMain alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FundYxzcgMain_Builder*) clear {
  self.result = [[[FundYxzcgMain alloc] init] autorelease];
  return self;
}
- (FundYxzcgMain_Builder*) clone {
  return [FundYxzcgMain builderWithPrototype:result];
}
- (FundYxzcgMain*) defaultInstance {
  return [FundYxzcgMain defaultInstance];
}
- (FundYxzcgMain*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FundYxzcgMain*) buildPartial {
  FundYxzcgMain* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FundYxzcgMain_Builder*) mergeFrom:(FundYxzcgMain*) other {
  if (other == [FundYxzcgMain defaultInstance]) {
    return self;
  }
  if (other.hasCommon) {
    [self mergeCommon:other.common];
  }
  if (other.mutableFundHiddenStockInfoProbList.count > 0) {
    if (result.mutableFundHiddenStockInfoProbList == nil) {
      result.mutableFundHiddenStockInfoProbList = [NSMutableArray array];
    }
    [result.mutableFundHiddenStockInfoProbList addObjectsFromArray:other.mutableFundHiddenStockInfoProbList];
  }
  if (other.hasTotalNum) {
    [self setTotalNum:other.totalNum];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FundYxzcgMain_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FundYxzcgMain_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Common_Builder* subBuilder = [Common builder];
        if (self.hasCommon) {
          [subBuilder mergeFrom:self.common];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCommon:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        FundHiddenStockInfoProb_Builder* subBuilder = [FundHiddenStockInfoProb builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addFundHiddenStockInfoProb:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setTotalNum:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasCommon {
  return result.hasCommon;
}
- (Common*) common {
  return result.common;
}
- (FundYxzcgMain_Builder*) setCommon:(Common*) value {
  result.hasCommon = YES;
  result.common = value;
  return self;
}
- (FundYxzcgMain_Builder*) setCommonBuilder:(Common_Builder*) builderForValue {
  return [self setCommon:[builderForValue build]];
}
- (FundYxzcgMain_Builder*) mergeCommon:(Common*) value {
  if (result.hasCommon &&
      result.common != [Common defaultInstance]) {
    result.common =
      [[[Common builderWithPrototype:result.common] mergeFrom:value] buildPartial];
  } else {
    result.common = value;
  }
  result.hasCommon = YES;
  return self;
}
- (FundYxzcgMain_Builder*) clearCommon {
  result.hasCommon = NO;
  result.common = [Common defaultInstance];
  return self;
}
- (NSArray*) fundHiddenStockInfoProbList {
  if (result.mutableFundHiddenStockInfoProbList == nil) { return [NSArray array]; }
  return result.mutableFundHiddenStockInfoProbList;
}
- (FundHiddenStockInfoProb*) fundHiddenStockInfoProbAtIndex:(int32_t) index {
  return [result fundHiddenStockInfoProbAtIndex:index];
}
- (FundYxzcgMain_Builder*) replaceFundHiddenStockInfoProbAtIndex:(int32_t) index with:(FundHiddenStockInfoProb*) value {
  [result.mutableFundHiddenStockInfoProbList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (FundYxzcgMain_Builder*) addAllFundHiddenStockInfoProb:(NSArray*) values {
  if (result.mutableFundHiddenStockInfoProbList == nil) {
    result.mutableFundHiddenStockInfoProbList = [NSMutableArray array];
  }
  [result.mutableFundHiddenStockInfoProbList addObjectsFromArray:values];
  return self;
}
- (FundYxzcgMain_Builder*) clearFundHiddenStockInfoProbList {
  result.mutableFundHiddenStockInfoProbList = nil;
  return self;
}
- (FundYxzcgMain_Builder*) addFundHiddenStockInfoProb:(FundHiddenStockInfoProb*) value {
  if (result.mutableFundHiddenStockInfoProbList == nil) {
    result.mutableFundHiddenStockInfoProbList = [NSMutableArray array];
  }
  [result.mutableFundHiddenStockInfoProbList addObject:value];
  return self;
}
- (BOOL) hasTotalNum {
  return result.hasTotalNum;
}
- (int32_t) totalNum {
  return result.totalNum;
}
- (FundYxzcgMain_Builder*) setTotalNum:(int32_t) value {
  result.hasTotalNum = YES;
  result.totalNum = value;
  return self;
}
- (FundYxzcgMain_Builder*) clearTotalNum {
  result.hasTotalNum = NO;
  result.totalNum = 0;
  return self;
}
@end

