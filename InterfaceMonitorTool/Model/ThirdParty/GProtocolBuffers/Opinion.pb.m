// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Opinion.pb.h"

@implementation OpinionRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [OpinionRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Opinion ()
@property (retain) NSString* title;
@property (retain) NSString* label;
@property int64_t publishTime;
@property int32_t opinionType;
@property int64_t uid;
@property (retain) NSString* tagName;
@property (retain) NSString* interviewDate;
@end

@implementation Opinion

- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (BOOL) hasLabel {
  return !!hasLabel_;
}
- (void) setHasLabel:(BOOL) value {
  hasLabel_ = !!value;
}
@synthesize label;
- (BOOL) hasPublishTime {
  return !!hasPublishTime_;
}
- (void) setHasPublishTime:(BOOL) value {
  hasPublishTime_ = !!value;
}
@synthesize publishTime;
- (BOOL) hasOpinionType {
  return !!hasOpinionType_;
}
- (void) setHasOpinionType:(BOOL) value {
  hasOpinionType_ = !!value;
}
@synthesize opinionType;
- (BOOL) hasUid {
  return !!hasUid_;
}
- (void) setHasUid:(BOOL) value {
  hasUid_ = !!value;
}
@synthesize uid;
- (BOOL) hasTagName {
  return !!hasTagName_;
}
- (void) setHasTagName:(BOOL) value {
  hasTagName_ = !!value;
}
@synthesize tagName;
- (BOOL) hasInterviewDate {
  return !!hasInterviewDate_;
}
- (void) setHasInterviewDate:(BOOL) value {
  hasInterviewDate_ = !!value;
}
@synthesize interviewDate;
- (void) dealloc {
  self.title = nil;
  self.label = nil;
  self.tagName = nil;
  self.interviewDate = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.title = @"";
    self.label = @"";
    self.publishTime = 0L;
    self.opinionType = 0;
    self.uid = 0L;
    self.tagName = @"";
    self.interviewDate = @"";
  }
  return self;
}
static Opinion* defaultOpinionInstance = nil;
+ (void) initialize {
  if (self == [Opinion class]) {
    defaultOpinionInstance = [[Opinion alloc] init];
  }
}
+ (Opinion*) defaultInstance {
  return defaultOpinionInstance;
}
- (Opinion*) defaultInstance {
  return defaultOpinionInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTitle) {
    [output writeString:1 value:self.title];
  }
  if (self.hasLabel) {
    [output writeString:2 value:self.label];
  }
  if (self.hasPublishTime) {
    [output writeSInt64:3 value:self.publishTime];
  }
  if (self.hasOpinionType) {
    [output writeSInt32:4 value:self.opinionType];
  }
  if (self.hasUid) {
    [output writeSInt64:5 value:self.uid];
  }
  if (self.hasTagName) {
    [output writeString:6 value:self.tagName];
  }
  if (self.hasInterviewDate) {
    [output writeString:7 value:self.interviewDate];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTitle) {
    size += computeStringSize(1, self.title);
  }
  if (self.hasLabel) {
    size += computeStringSize(2, self.label);
  }
  if (self.hasPublishTime) {
    size += computeSInt64Size(3, self.publishTime);
  }
  if (self.hasOpinionType) {
    size += computeSInt32Size(4, self.opinionType);
  }
  if (self.hasUid) {
    size += computeSInt64Size(5, self.uid);
  }
  if (self.hasTagName) {
    size += computeStringSize(6, self.tagName);
  }
  if (self.hasInterviewDate) {
    size += computeStringSize(7, self.interviewDate);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Opinion*) parseFromData:(NSData*) data {
  return (Opinion*)[[[Opinion builder] mergeFromData:data] build];
}
+ (Opinion*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Opinion*)[[[Opinion builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Opinion*) parseFromInputStream:(NSInputStream*) input {
  return (Opinion*)[[[Opinion builder] mergeFromInputStream:input] build];
}
+ (Opinion*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Opinion*)[[[Opinion builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Opinion*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Opinion*)[[[Opinion builder] mergeFromCodedInputStream:input] build];
}
+ (Opinion*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Opinion*)[[[Opinion builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Opinion_Builder*) builder {
  return [[[Opinion_Builder alloc] init] autorelease];
}
+ (Opinion_Builder*) builderWithPrototype:(Opinion*) prototype {
  return [[Opinion builder] mergeFrom:prototype];
}
- (Opinion_Builder*) builder {
  return [Opinion builder];
}
@end

@interface Opinion_Builder()
@property (retain) Opinion* result;
@end

@implementation Opinion_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Opinion alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Opinion_Builder*) clear {
  self.result = [[[Opinion alloc] init] autorelease];
  return self;
}
- (Opinion_Builder*) clone {
  return [Opinion builderWithPrototype:result];
}
- (Opinion*) defaultInstance {
  return [Opinion defaultInstance];
}
- (Opinion*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Opinion*) buildPartial {
  Opinion* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Opinion_Builder*) mergeFrom:(Opinion*) other {
  if (other == [Opinion defaultInstance]) {
    return self;
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasLabel) {
    [self setLabel:other.label];
  }
  if (other.hasPublishTime) {
    [self setPublishTime:other.publishTime];
  }
  if (other.hasOpinionType) {
    [self setOpinionType:other.opinionType];
  }
  if (other.hasUid) {
    [self setUid:other.uid];
  }
  if (other.hasTagName) {
    [self setTagName:other.tagName];
  }
  if (other.hasInterviewDate) {
    [self setInterviewDate:other.interviewDate];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Opinion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Opinion_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTitle:[input readString]];
        break;
      }
      case 18: {
        [self setLabel:[input readString]];
        break;
      }
      case 24: {
        [self setPublishTime:[input readSInt64]];
        break;
      }
      case 32: {
        [self setOpinionType:[input readSInt32]];
        break;
      }
      case 40: {
        [self setUid:[input readSInt64]];
        break;
      }
      case 50: {
        [self setTagName:[input readString]];
        break;
      }
      case 58: {
        [self setInterviewDate:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (Opinion_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (Opinion_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasLabel {
  return result.hasLabel;
}
- (NSString*) label {
  return result.label;
}
- (Opinion_Builder*) setLabel:(NSString*) value {
  result.hasLabel = YES;
  result.label = value;
  return self;
}
- (Opinion_Builder*) clearLabel {
  result.hasLabel = NO;
  result.label = @"";
  return self;
}
- (BOOL) hasPublishTime {
  return result.hasPublishTime;
}
- (int64_t) publishTime {
  return result.publishTime;
}
- (Opinion_Builder*) setPublishTime:(int64_t) value {
  result.hasPublishTime = YES;
  result.publishTime = value;
  return self;
}
- (Opinion_Builder*) clearPublishTime {
  result.hasPublishTime = NO;
  result.publishTime = 0L;
  return self;
}
- (BOOL) hasOpinionType {
  return result.hasOpinionType;
}
- (int32_t) opinionType {
  return result.opinionType;
}
- (Opinion_Builder*) setOpinionType:(int32_t) value {
  result.hasOpinionType = YES;
  result.opinionType = value;
  return self;
}
- (Opinion_Builder*) clearOpinionType {
  result.hasOpinionType = NO;
  result.opinionType = 0;
  return self;
}
- (BOOL) hasUid {
  return result.hasUid;
}
- (int64_t) uid {
  return result.uid;
}
- (Opinion_Builder*) setUid:(int64_t) value {
  result.hasUid = YES;
  result.uid = value;
  return self;
}
- (Opinion_Builder*) clearUid {
  result.hasUid = NO;
  result.uid = 0L;
  return self;
}
- (BOOL) hasTagName {
  return result.hasTagName;
}
- (NSString*) tagName {
  return result.tagName;
}
- (Opinion_Builder*) setTagName:(NSString*) value {
  result.hasTagName = YES;
  result.tagName = value;
  return self;
}
- (Opinion_Builder*) clearTagName {
  result.hasTagName = NO;
  result.tagName = @"";
  return self;
}
- (BOOL) hasInterviewDate {
  return result.hasInterviewDate;
}
- (NSString*) interviewDate {
  return result.interviewDate;
}
- (Opinion_Builder*) setInterviewDate:(NSString*) value {
  result.hasInterviewDate = YES;
  result.interviewDate = value;
  return self;
}
- (Opinion_Builder*) clearInterviewDate {
  result.hasInterviewDate = NO;
  result.interviewDate = @"";
  return self;
}
@end

