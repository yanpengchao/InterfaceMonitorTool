// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Fund.pb.h"

@implementation FundRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FundRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Fund ()
@property (retain) NSString* jjjc;
@property (retain) NSString* rzrq;
@property (retain) NSString* rqhb;
@end

@implementation Fund

- (BOOL) hasJjjc {
  return !!hasJjjc_;
}
- (void) setHasJjjc:(BOOL) value {
  hasJjjc_ = !!value;
}
@synthesize jjjc;
- (BOOL) hasRzrq {
  return !!hasRzrq_;
}
- (void) setHasRzrq:(BOOL) value {
  hasRzrq_ = !!value;
}
@synthesize rzrq;
- (BOOL) hasRqhb {
  return !!hasRqhb_;
}
- (void) setHasRqhb:(BOOL) value {
  hasRqhb_ = !!value;
}
@synthesize rqhb;
- (void) dealloc {
  self.jjjc = nil;
  self.rzrq = nil;
  self.rqhb = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.jjjc = @"";
    self.rzrq = @"";
    self.rqhb = @"";
  }
  return self;
}
static Fund* defaultFundInstance = nil;
+ (void) initialize {
  if (self == [Fund class]) {
    defaultFundInstance = [[Fund alloc] init];
  }
}
+ (Fund*) defaultInstance {
  return defaultFundInstance;
}
- (Fund*) defaultInstance {
  return defaultFundInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJjjc) {
    [output writeString:1 value:self.jjjc];
  }
  if (self.hasRzrq) {
    [output writeString:2 value:self.rzrq];
  }
  if (self.hasRqhb) {
    [output writeString:3 value:self.rqhb];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJjjc) {
    size += computeStringSize(1, self.jjjc);
  }
  if (self.hasRzrq) {
    size += computeStringSize(2, self.rzrq);
  }
  if (self.hasRqhb) {
    size += computeStringSize(3, self.rqhb);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Fund*) parseFromData:(NSData*) data {
  return (Fund*)[[[Fund builder] mergeFromData:data] build];
}
+ (Fund*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Fund*)[[[Fund builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Fund*) parseFromInputStream:(NSInputStream*) input {
  return (Fund*)[[[Fund builder] mergeFromInputStream:input] build];
}
+ (Fund*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Fund*)[[[Fund builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Fund*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Fund*)[[[Fund builder] mergeFromCodedInputStream:input] build];
}
+ (Fund*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Fund*)[[[Fund builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Fund_Builder*) builder {
  return [[[Fund_Builder alloc] init] autorelease];
}
+ (Fund_Builder*) builderWithPrototype:(Fund*) prototype {
  return [[Fund builder] mergeFrom:prototype];
}
- (Fund_Builder*) builder {
  return [Fund builder];
}
@end

@interface Fund_Builder()
@property (retain) Fund* result;
@end

@implementation Fund_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Fund alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Fund_Builder*) clear {
  self.result = [[[Fund alloc] init] autorelease];
  return self;
}
- (Fund_Builder*) clone {
  return [Fund builderWithPrototype:result];
}
- (Fund*) defaultInstance {
  return [Fund defaultInstance];
}
- (Fund*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Fund*) buildPartial {
  Fund* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Fund_Builder*) mergeFrom:(Fund*) other {
  if (other == [Fund defaultInstance]) {
    return self;
  }
  if (other.hasJjjc) {
    [self setJjjc:other.jjjc];
  }
  if (other.hasRzrq) {
    [self setRzrq:other.rzrq];
  }
  if (other.hasRqhb) {
    [self setRqhb:other.rqhb];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Fund_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Fund_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setJjjc:[input readString]];
        break;
      }
      case 18: {
        [self setRzrq:[input readString]];
        break;
      }
      case 26: {
        [self setRqhb:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasJjjc {
  return result.hasJjjc;
}
- (NSString*) jjjc {
  return result.jjjc;
}
- (Fund_Builder*) setJjjc:(NSString*) value {
  result.hasJjjc = YES;
  result.jjjc = value;
  return self;
}
- (Fund_Builder*) clearJjjc {
  result.hasJjjc = NO;
  result.jjjc = @"";
  return self;
}
- (BOOL) hasRzrq {
  return result.hasRzrq;
}
- (NSString*) rzrq {
  return result.rzrq;
}
- (Fund_Builder*) setRzrq:(NSString*) value {
  result.hasRzrq = YES;
  result.rzrq = value;
  return self;
}
- (Fund_Builder*) clearRzrq {
  result.hasRzrq = NO;
  result.rzrq = @"";
  return self;
}
- (BOOL) hasRqhb {
  return result.hasRqhb;
}
- (NSString*) rqhb {
  return result.rqhb;
}
- (Fund_Builder*) setRqhb:(NSString*) value {
  result.hasRqhb = YES;
  result.rqhb = value;
  return self;
}
- (Fund_Builder*) clearRqhb {
  result.hasRqhb = NO;
  result.rqhb = @"";
  return self;
}
@end

